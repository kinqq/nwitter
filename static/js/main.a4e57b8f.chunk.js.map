{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","href","rel","src","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","marginTop","key","String","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4e57b8f.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    let [error, setError] = useState(\"\");\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                data = await authService.createUserWithEmailAndPassword(\n                    email,\n                    password\n                );\n            } else {\n                data = await authService.signInWithEmailAndPassword(\n                    email,\n                    password\n                );\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    className=\"authInput\"\n                    onChange={onChange}\n                />\n                <input\n                    type=\"submit\"\n                    className=\"authInput authSubmit\"\n                    value={newAccount ? \"Create Account\" : \"Sign In\"}\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"5x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button\n                    onClick={onSocialClick}\n                    name=\"google\"\n                    className=\"authBtn\"\n                >\n                    <FontAwesomeIcon icon={faGoogle} size=\"2x\" />\n                </button>\n                <button\n                    onClick={onSocialClick}\n                    name=\"github\"\n                    className=\"authBtn\"\n                >\n                    <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n                </button>\n            </div>\n        </div>\n    );\n};\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\n            \"Are you sure you want to delete this nweet?\"\n        );\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing = () => setEditing((prev) => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Edit your nweet\"\n                            value={newNweet}\n                            required\n                            autoFocus\n                            onChange={onChange}\n                            className=\"formInput\"\n                        />\n                        <input\n                            type=\"submit\"\n                            value=\"Update Nweet\"\n                            className=\"formBtn\"\n                        />\n                    </form>\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </span>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <a\n                            href={nweetObj.attachmentUrl}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <img\n                                src={nweetObj.attachmentUrl}\n                                alt=\"attachment\"\n                            />\n                        </a>\n                    )}\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n                .ref()\n                .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(\n                attachment,\n                \"data_url\"\n            );\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        };\n        await dbService.collection(\"nweets\").add(nweetObj);\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        if (Boolean(theFile)) {\n            reader.readAsDataURL(theFile);\n        }\n    };\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input\n                    type=\"submit\"\n                    value=\"&rarr;\"\n                    className=\"factoryInput__arrow\"\n                />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                        alt=\"attachment\"\n                    />\n                    <div\n                        className=\"factoryForm__clear\"\n                        onClick={onClearAttachment}\n                    >\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\nexport default NweetFactory;\n","import React, { useState, useEffect } from \"react\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n    useEffect(() => {\n        dbService\n            .collection(\"nweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const nweetArray = snapshot.docs.map((doc) => ({\n                    id: doc.id,\n                    ...doc.data(),\n                }));\n                setNweets(nweetArray);\n            });\n    }, []);\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={\n                            nweet.creatorId === userObj.uid ||\n                            String(userObj.uid) ===\n                                \"iZ8twQlEqYfTII6mCbP2sqNmmRE3\"\n                        }\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                <>\n                    {isLoggedIn ? (\n                        <div\n                            style={{\n                                maxWidth: 890,\n                                width: \"100%\",\n                                margin: \"0 auto\",\n                                marginTop: 80,\n                                display: \"flex\",\n                                justifyContent: \"center\",\n                            }}\n                        >\n                            <Route exact path=\"/\">\n                                <Home userObj={userObj} />\n                            </Route>\n                            <Route exact path=\"/profile\">\n                                <Profile\n                                    userObj={userObj}\n                                    refreshUser={refreshUser}\n                                />\n                            </Route>\n                        </div>\n                    ) : (\n                        <>\n                            <Route exact path=\"/\">\n                                <Auth />\n                            </Route>\n                        </>\n                    )}\n                </>\n            </Switch>\n        </Router>\n    );\n};\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    displayName: user.displayName,\n                    uid: user.uid,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(null);\n            }\n            setInit(true);\n        });\n    }, []);\n    const refreshUser = () => {\n        const user = authService.currentUser;\n        setUserObj({\n            displayName: user.displayName,\n            uid: user.uid,\n            updateProfile: (args) => user.updateProfile(args),\n        });\n    };\n    return (\n        <>\n            {init ? (\n                <BrowserRouter>\n                    <AppRouter\n                        refreshUser={refreshUser}\n                        isLoggedIn={Boolean(userObj)}\n                        userObj={userObj}\n                    />\n                </BrowserRouter>\n            ) : (\n                \"Initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}